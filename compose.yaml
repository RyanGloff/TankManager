services:
  postgres:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  liquibase:
    image: liquibase/liquibase
    container_name: liquibase
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./db:/liquibase/db
    command: >
      --url=jdbc:postgresql://postgres:${DB_PORT}/${DB_NAME}
      --changeLogFile=db/changelog/changelog.xml
      --username=${DB_USER}
      --password=${DB_PASSWORD}
      update

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "${VITE_API_PORT}:${VITE_API_PORT}"
    depends_on:
      liquibase:
        condition: service_completed_successfully
    environment:
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      API_PORT: ${VITE_API_PORT}
      API_BASE_PATH: ${VITE_API_BASE_PATH}

  apex-monitor:
    build:
      context: ./apex-monitor
      dockerfile: Dockerfile
    container_name: apex-monitor
    depends_on:
      - api
    environment:
      API_HOST: api
      API_PORT: ${VITE_API_PORT}
      API_BASE_PATH: ${VITE_API_BASE_PATH}

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
      args:
        VITE_API_HOST: ${VITE_API_HOST}
        VITE_API_PORT: ${VITE_API_PORT}
        VITE_API_BASE_PATH: ${VITE_API_BASE_PATH}
    container_name: ui
    ports:
      - "${VITE_UI_PORT}:${VITE_UI_PORT}"
    depends_on:
      - api
    environment:
      VITE_API_HOST: ${VITE_API_HOST}
      VITE_API_PORT: ${VITE_API_PORT}
      VITE_API_BASE_PATH: ${VITE_API_BASE_PATH}

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost:${GRAFANA_PORT}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  postgres-data:
  grafana-data:
