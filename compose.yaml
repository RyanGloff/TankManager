version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_DB: tank_data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "tank_data"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  liquibase:
    image: liquibase/liquibase
    container_name: liquibase
    depends_on:
      - postgres
    volumes:
      - ./db:/liquibase/db
    command: >
      --url=jdbc:postgresql://postgres:5432/tank_data
      --changeLogFile=db/changelog/changelog.xml
      --username=postgres
      --password=docker
      update

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "8080:8080"
    depends_on:
      liquibase:
        condition: service_completed_successfully
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: docker
      DB_NAME: tank_data
      API_PORT: 8080
      API_BASE_PATH: /api/

  apex-monitor:
    build:
      context: ./apex-monitor
      dockerfile: Dockerfile
    container_name: apex-monitor
    depends_on:
      - api
    environment:
      API_HOST: api
      API_PORT: 8080
      API_BASE_PATH: /api/

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: ui
    ports:
      - "8081:8081"
    depends_on:
      - api
    environment:
      API_HOST: api
      API_PORT: 8081
      API_BASE_PATH: /api/

volumes:
  postgres-data:
